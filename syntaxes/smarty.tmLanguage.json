{
    "scopeName": "text.html.smarty",
    "name": "Smarty",
    "fileTypes": [
        "tpl",
        "smarty",
        "html.smarty"
    ],
    "keyEquivalent": "^~S",
    "injections": {
        "text.html.smarty - (meta.embedded | meta.tag | comment.block), L:text.html.smarty meta.tag": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#blocks"
                },
                {
                    "include": "#literals"
                }
            ]
        }
    },
    "patterns": [
        {
            "include": "text.html.basic"
        }
    ],
    "repository": {
        "blocks": {
            "patterns": [
                {
                    "begin": "(\\{%?)",
                    "beginCaptures": {
                        "0": {
                            "name": "source.smarty"
                        },
                        "1": {
                            "name": "punctuation.section.embedded.begin.smarty"
                        }
                    },
                    "contentName": "source.smarty",
                    "end": "(%?\\})",
                    "endCaptures": {
                        "0": {
                            "name": "source.smarty"
                        },
                        "1": {
                            "name": "punctuation.section.embedded.end.smarty"
                        }
                    },
                    "name": "meta.embedded.line.tag.smarty",
                    "patterns": [
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#variables"
                        },
                        {
                            "include": "#lang"
                        },
                        {
                            "include": "#literals"
                        },
                        {
                            "include": "#numbers"
                        }
                    ]
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "begin": "(\\{%?)\\*",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.smarty"
                        }
                    },
                    "end": "\\*(%?\\})",
                    "name": "comment.block.smarty"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b",
                    "name": "constant.numeric.smarty"
                }
            ]
        },
        "lang": {
            "patterns": [
                {
                    "match": "(!==|!=|!|&lt;=|&gt;=|&lt;|&gt;|===|==|%|&amp;&amp;|\\|\\|)|\\b(and|or|eq|neq|ne|gte|gt|ge|lte|lt|le|not|mod)\\b",
                    "name": "keyword.operator.smarty"
                },
                {
                    "match": "\\b(TRUE|FALSE|true|false)\\b",
                    "name": "constant.language.smarty"
                },
                {
                    "match": "\\b(if|else|elseif|for|forelse|foreach|foreachelse|section|switch|case|break|default|function)\\b",
                    "name": "keyword.control.smarty"
                },
                {
                    "captures": {
                        "0": {
                            "name": "variable.parameter.smarty"
                        }
                    },
                    "match": "\\b([a-zA-Z]+)=",
                    "name": "meta.attribute.smarty"
                },
                {
                    "match": "\\b(capture|config_load|counter|cycle|debug|eval|fetch|include_php|include|insert|math|strip|rdelim|ldelim|assign|constant|block|html_[a-z_]*)\\b",
                    "name": "support.function.built-in.smarty"
                },
                {
                    "match": "\\|(capitalize|cat|count_characters|count_paragraphs|count_sentences|count_words|date_format|default|escape|indent|lower|nl2br|regex_replace|replace|spacify|string_format|strip_tags|strip|truncate|upper|wordwrap)",
                    "name": "support.function.variable-modifier.smarty"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "begin": "'",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.smarty"
                        }
                    },
                    "end": "'",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.smarty"
                        }
                    },
                    "name": "string.quoted.single.smarty",
                    "patterns": [
                        {
                            "match": "\\\\.",
                            "name": "constant.character.escape.smarty"
                        }
                    ]
                },
                {
                    "begin": "\"",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.smarty"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.smarty"
                        }
                    },
                    "name": "string.quoted.double.smarty",
                    "patterns": [
                        {
                            "match": "\\\\.",
                            "name": "constant.character.escape.smarty"
                        }
                    ]
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.smarty"
                        }
                    },
                    "match": "\\$Smarty|\\$smarty",
                    "name": "variable.other.global.smarty"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.smarty"
                        },
                        "2": {
                            "name": "variable.other.smarty"
                        }
                    },
                    "match": "(\\$)([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                    "name": "variable.other.smarty"
                },
                {
                    "captures": {
                        "1": {
                            "name": "keyword.operator.smarty"
                        },
                        "2": {
                            "name": "variable.other.property.smarty"
                        }
                    },
                    "match": "(-&gt;)([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                    "name": "variable.other.smarty"
                },
                {
                    "captures": {
                        "1": {
                            "name": "keyword.operator.smarty"
                        },
                        "2": {
                            "name": "meta.function-call.object.smarty"
                        },
                        "3": {
                            "name": "punctuation.definition.variable.smarty"
                        },
                        "4": {
                            "name": "punctuation.definition.variable.smarty"
                        }
                    },
                    "match": "(-&gt;)([a-zA-Z_][a-zA-Z0-9_]*)(\\().*?(\\))",
                    "name": "variable.other.smarty"
                }
            ]
        },
        "literals": {
            "patterns": [
                {
                    "begin": "{literal",
                    "end": "{\/literal",
                    "include": "text.html.basic"
                }
            ]
        }
    }
}
